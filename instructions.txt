npm init
npm install express
Add node_modules to gitignore
npm i --save-dev nodemon-> use --save-dev for development dependency
Add type: module to package.json to use import export keywords
npm install --save-dev @babel/core @babel/preset-env @babel/cli @babel/node
Delete module from package.json still use import by typing 'npx babel-node ./index.js'
Use babel to transpile javascript -> npx babel src --out-dir build --config-file ./.babelrc 
npm i --save-dev @babel/plugin-proposal-optional-chaining->.babelrc
curl -XPOST -H "Content-Type: application/json" -d '{"id": "345", "name": "Bob Brown" }' localhost:3000/users
#To run mongoDB type -> 'brew services start mongodb-community@4.4'
#To connecto to Mongodb type -> 'mongo'
create npm publish package folder -> npm install chalk -> npm init -> npm login -> npm whoami ->npm publish
update npm package-> change version -> npm publish -> npm install new version npm install color@1.0.1
To prepare nodejs applications for production -> type -> npx babel ./src/hosting-example/server.js --out-file hosted-server.js
Add start to package.json and engines for heroku
Install heroku type -> brew tap heroku/brew && brew install heroku
heroku login -> git add -> git commit -> heroku create -> git push heroku master
for testing -> npm install --save-dev mocha chai to include only in development not production
type npx mocha "src/**/*.test.js --recursive --require @babel/register for mocha to test all files with .test.js
install babel register for mocha to work with ES6-> npm install --save-dev @babel/register
install super test library -> npm install --save-dev supertest
create script "test" in package.json and add test command to it -> type 'npm run test'